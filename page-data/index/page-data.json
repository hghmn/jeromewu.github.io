{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"TechBlog"}},"allMarkdownRemark":{"nodes":[{"excerpt":"In 2019, I bought a Chromebook (HP Chromebook 13 G1, release on 2016) to be a lightweight laptop when I am out. I really enjoyed using…","fields":{"slug":"/how-to-fix-hidpi-issues-in-gulliam-os-3.1/"},"frontmatter":{"date":"April 12, 2020","title":"How to fix (80%) HiDPI issues in Gulliam OS 3.1","description":"Fix HiDPI issues in Gulliam OS with ease"}},{"excerpt":"When you use Node.js in your project, you need to take care of node_modules installation in your CI/CD pipeline. You may use , ,  and , but…","fields":{"slug":"/how-to-speed-up-node-js-modules-installation/"},"frontmatter":{"date":"March 28, 2020","title":"How to speed up Node.js modules installation in CI/CD pipeline as of 2020","description":"The optimal way of installing node_modules in CI/CD pipeline"}},{"excerpt":"FFmpeg is a great tool when it comes to multimedia manipulation, by default it uses CPU with multi-thread to do the task which causes a high…","fields":{"slug":"/speedup-ffmpeg-without-compiling-from-source-code/"},"frontmatter":{"date":"November 17, 2019","title":"Speedup FFmpeg without compiling from source code","description":"How to speedup FFmpeg for free"}},{"excerpt":"In this part you will learn: Add Libx264 to ffmpeg-core.js In browser ffmpeg.wasm demo Add Libx264 to ffmpeg-core.js For next step, we would…","fields":{"slug":"/build-ffmpeg-webassembly-version-part-4-v0.2/"},"frontmatter":{"date":"October 31, 2019","title":"Build FFmpeg WebAssembly version (= ffmpeg.wasm): Part.4 ffmpeg.wasm v0.2 — Add Libx264","description":"A series of tutorials of using Emscripten to build ffmpeg"}},{"excerpt":"In this part you will learn: Build a library version of FFmpeg with optimized arguments. Interact with ffmpeg.wasm Manage Emscripten File…","fields":{"slug":"/build-ffmpeg-webassembly-version-part-3-v0.1/"},"frontmatter":{"date":"October 21, 2019","title":"Build FFmpeg WebAssembly version (= ffmpeg.wasm): Part.3 ffmpeg.wasm v0.1 — Transcoding avi to mp4","description":"A series of tutorials of using Emscripten to build ffmpeg"}},{"excerpt":"From here, things are going to be more complicated and hard to understand, you may need to google background knowledge if you don’t know…","fields":{"slug":"/build-ffmpeg-webassembly-version-part-2-compile-with-emscripten/"},"frontmatter":{"date":"October 13, 2019","title":"Build FFmpeg WebAssembly version (= ffmpeg.wasm): Part.2 Compile with Emscripten","description":"A series of tutorials of using Emscripten to build ffmpeg"}},{"excerpt":"In this part you will learn: The background of this series How to build native FFmpeg with Docker (and without docker in MacOS) The…","fields":{"slug":"/build-ffmpeg-webassembly-version-part-1-preparation/"},"frontmatter":{"date":"October 13, 2019","title":"Build FFmpeg WebAssembly version (= ffmpeg.wasm): Part.1 Preparation","description":"A series of tutorials of using Emscripten to build ffmpeg"}},{"excerpt":"After almost 2 years of maintaining tesseract.js, I have to say tesseract.js hit its limitation as some of the issues from users are hard to…","fields":{"slug":"/why-i-refactor-tesseract.js-v2/"},"frontmatter":{"date":"October 03, 2019","title":"Why I refactor tesseract.js v2?","description":"The story behind tesseract.js v2 refactoring"}}]}},"pageContext":{}},"staticQueryHashes":["2841359383","916993862"]}